<apex:page standardStylesheets="false"
    sidebar="false"
    showHeader="false"
    contentType="text/html" cache="true"><apex:outputText escape="false" value="{!"<!DOCTYPE html>"}"/>
<html>
    <head>
        <title>DragDrop</title>

        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />

        <apex:stylesheet value="{!URLFOR($Resource.Reset)}" />
        <apex:includeScript value="{!URLFOR($Resource.Modernizr)}" />

        <style type="text/css">

            #page{
                width: 90%; /* 5% margin on both sides */
                margin: 36px auto;
            }

            #dropTarget{
              background-color: #fff;
              border: 2px dashed #999;
              text-align: center;
            }
            
            #dropTarget p{
                margin: 36px auto 36px auto;
            }

            #loading{
                margin: 36px auto;
            }

            #loading ul{
                list-style:none;
            }

            .hover{
              border: dashed 2px red !important;   
            }
            
            
        </style>
    </head>
    <body>
        <section id='page'>
            <header>
                <nav>
                </nav>
            </header>
            <article>

                <div id="dropTarget">
                    <p>Drop something here</p>
                </div>

                <div id="loading">
                    <ul id="fileList">

                    </ul>
                </div>
            </article>
            <footer>
            </footer>
        </section>

        

        <script src="../../soap/ajax/20.0/connection.js" type="text/javascript"></script>
        <script src="../../soap/ajax/20.0/apex.js" type="text/javascript"></script>
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" />
        <script>

            var __sfdcSessionId = '{!GETSESSIONID()}'; 
            
            function log(msg){ 
                try{ console.log(msg); }catch(x){} 
            }

            function createProgressItem(f){

                //lazy load our createProgressItem function
                //if browser supports progress elements, then use them
                //else show spinners

                //Modernizr doesn't support progress elements yet,
                //but is in this fork https://github.com/dpkendal/Modernizr
                if ('value' in document.createElement('progress')){
                    //supports HTML5 progress
                    createProgressItem = function(f){
                        return $("#fileList").append($('<li>'+f.name+' <progress class="progress"></progress></li>'));
                    };
                }
                else {
                    //no HTML5 progress
                    createProgressItem = function(f){
                        return $("#fileList").append($('<li>'+f.name+' <span class="progress"></span><img class="loading" src="{!URLFOR($Resource.LoadingImage)}" alt="loading" ></img></li>'));
                    }
                }
                return createProgressItem(f);
            }

            function loadFile(f){
                
                sforce.connection.sessionId = '{!$Api.Session_ID}'; 

                var fileListItem = createProgressItem(f);

                var reader = new FileReader();

                reader.onerror = function(evt){
                    
                    switch(evt.target.error.code) {
                         case evt.target.error.NOT_FOUND_ERR:
                               fileListItem.find('.progress').text('File Not Found!');
                         break;
                         case evt.target.error.NOT_READABLE_ERR:
                                fileListItem.find('.progress').text('File Not Readable!');
                         break;
                         case evt.target.error.ABORT_ERR:
                                fileListItem.find('.progress').text('Aborted!');
                         break;
                         default:
                               fileListItem.find('.progress').text('Unknown error!');
                    }
                };
                
                reader.onprogress = function(evt){

                    if (evt.lengthComputable) {
                        var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
                        console.log(percentLoaded);
                        // Increase the progress bar length.
                        if (percentLoaded < 100) {
                            fileListItem.find('.progress').text( percentLoaded + '%');
                        }
                    }
                };
                
                reader.onloadstart = function(e) {
                    
                    fileListItem.find('.progress').text('0%');
                    fileListItem.find('.loading').show();
                };
                
                reader.onload = function(e) {
                    var progress = fileListItem.find('.progress');
                    progress.text('100%');
                    fileListItem.find('.loading').hide();
                    
                    try{
                        newAttachmentId = sforce.apex.execute("FileAttachmentService","createFileAttachment", { fileName: f.name, fileContent: e.target.result });
                        log('Attachment Id: ' + newAttachmentId);
                        progress.html('<a target="_blank" href="/' + newAttachmentId + '">[View Attachment]</a>');
                    }catch(x){
                        log(x);
                    }
                };

                reader.readAsBinaryString(f);  
            }
            
       
            $(document).ready(function() {
                   
                if (Modernizr.draganddrop) {
                  
                    var target = $('#dropTarget');

                    //when we drag something over the droptarget area, highlight it
                    target.bind('dragover', function () { $(this).addClass('hover'); return false; });

                    //when drag ends or leaves the droptarget area, unhighlight it
                    target.bind('dragend, dragleave', function () { $(this).removeClass('hover'); return false; });

                    //when something is dropped, this is where the magic happens
                    target.bind('drop', function (e) {

                        $(this).removeClass('hover');
                        e.preventDefault();

                        if (window.File && window.FileList && window.FileReader){

                          var files = e.originalEvent.dataTransfer.files;
                          for (var i = 0, f; f = files[i]; i++) {
                              console.log('you dropped: ' + f.name);
                              loadFile(f);
                          }
                        }

                        return false;
                    });
                  
                } else {
                  
                  //no draganddrop support
                  console.log('Boo - no support for draganddrop');
                } 
            });
        </script>
    </body>
</html>
</apex:page>